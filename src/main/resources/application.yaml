server:
  port: 8082

spring:
  application:
    name: ProgettoPSW

  datasource:
    url: jdbc:mysql://localhost:3306/PSWDB?createDatabaseIfNotExist=true
    username: root
    password: brun1chr1s13

  # --- SECURITY ---------------------------------------------------
  security:

    # 1) Resource Server: validazione dei JWT emessi da Keycloak
    oauth2:
      resourceserver:
        jwt:
          # URL da cui Spring scarica le chiavi pubbliche di Keycloak
          jwk-set-uri: http://localhost:8080/realms/ProgettoPSW/protocol/openid-connect/certs
      client:
        registration:
                  keycloak:
                    client-id: TestClient
                    client-secret: 4u7x9VFNo7URRzx31jzoUcgSkLezvlon
                    scope: openid,profile,email
                    # (Se usi il backend per fare redirect post-login)
                    redirect-uri: "http://localhost:8082/login/oauth2/code/keycloak"
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/ProgettoPSW

    # 2) (Facoltativo) Client registration nel caso tu voglia usare
    #    lâ€™endpoint /login/oauth2/code/keycloak direttamente nel backend:


  # 3) CORS: permetti chiamate da Flutter (http://localhost:8083)
  web:
    cors:
      mappings:
        # applica a tutte le API (modifica il mapping se vuoi limitarle)
        /api/**:
          allowed-origins: "http://localhost:8083"
          allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
          allow-credentials: true

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
